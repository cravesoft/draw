<div>
    <div id="canvasDiv"></div>
    <p id="messages" style="max-height:300px; overflow:auto;"></p>
    <form method="post" id="message-form">
        <input type="text" placeholder="Type your message" id="message-input" name="message" autofocus required>
        <input type="submit" value="OK">
    </form>
</div>

<script type="text/javascript" src="/socket.io/socket.io.js"></script>
<script type="text/javascript">

Number.prototype.pad = function (len) {
    return (new Array(len+1).join("0") + this).slice(-len);
}

/** Socket */
var sio = io.connect(), socket = sio.socket.of('/draw');
socket
.on('connect', function () {
    // at connection, first send my username
    socket.emit('user', <%- JSON.stringify(username) %>);
})
.on('error', function (error) {
    // an error occured
    console.log('Error: ' + error);
})
.on('log', function (message, time) {
    // display log message
    addLogMessage(message, time);
})
.on('message', function (username, message, time) {
    // someone wrote a message
    addMessage(username, message, time);
})
.on('changeColor', function (y) {
    changeColor(y);
})
.on('changeCursorSize', function (x, y) {
    changeCursorSize(x, y);
})
.on('changeTool', function (y) {
    changeTool(y);
})
.on('addClick', function (x, y, dragging) {
    addClick(x, y, dragging);
})
.on('redraw', function () {
    redraw();
})
.on('clearCanvas', function () {
    clearCanvas();
})

prepareCanvas();
 
/** Form */
var messageInput = $('#message-input');
$('#message-form').submit(function() {
    console.log(messageInput.val());
  socket.emit('write', messageInput.val());
  messageInput.val('');
  return false;
});

/** Display */
var messagesArea = $('#messages');
function addMessage(username, message, time) {
    if (typeof time != 'string') {
        var date = new Date(time);
        time = date.getHours().pad(2) + ':' + date.getMinutes().pad(2) + ':' + date.getSeconds().pad(2);
    }
    //var line = '[' + time + '] <strong>' + username + '</strong>: ' + message + '<br />';
    var line = '<strong>&lt;' + username + '&gt;</strong> ' + message + '<br />';
    messagesArea.html(messagesArea.html() + line);
    messagesArea.animate({scrollTop: messagesArea[0].scrollHeight});
}

function addRecoMessage(username, message, time) {
    if (typeof time != 'string') {
        var date = new Date(time);
        time = date.getHours().pad(2) + ':' + date.getMinutes().pad(2) + ':' + date.getSeconds().pad(2);
    }
    //var line = '[' + time + '] <strong>' + username + '</strong>: ' + message + '<br />';
    var line = '<span class=reco><strong>&lt;' + username + '&gt;</strong> ' + message + '</span><br />';
    messagesArea.html(messagesArea.html() + line);
    messagesArea.animate({scrollTop: messagesArea[0].scrollHeight});
}

function addLogMessage(message, time) {
    if (typeof time != 'string') {
        var date = new Date(time);
        time = date.getHours().pad(2) + ':' + date.getMinutes().pad(2) + ':' + date.getSeconds().pad(2);
    }
    var tokens = message.split('<br />');
    //var line = '[' + time + '] <strong>*</strong> ' + tokens[0] + '<br />';
    var line = '<span class=log><strong>*</strong> ' + tokens[0] + '</span><br />';
    for (var i=1; i<tokens.length; i++) {
      line += '<span class=log>&nbsp;&nbsp;' + tokens[i] + '</span><br />';
    }
    messagesArea.html(messagesArea.html() + line);
    messagesArea.animate({scrollTop: messagesArea[0].scrollHeight});
}

var scoresArea = $('#scores');
function updateScore(username, score) {
    var line = $('#scores li');
    if (line.length) {
        line.html(username + ' ' + score);
    } else {
        scoresArea.append($('<li></li>').html(username + ' ' + score));
        console.log(username);
    }
}

$(window).resize($.debounce(100, function() {
    messagesArea.animate({scrollTop: messagesArea[0].scrollHeight}, {duration: 0});
}));

</script>
